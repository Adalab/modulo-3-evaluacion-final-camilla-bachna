{"version":3,"sources":["services/DataApi.js","components/Filter.js","components/CharactersCard.js","components/CharactersList.js","components/CharacterDetail.js","components/CharacterNotFound.js","images/Rick_and_Morty_-_logo.png","components/App.js","index.js"],"names":["dataApi","fetch","then","response","json","data","results","map","character","id","name","species","foto","image","status","origin","episode","Filter","props","handleCharacter","event","handleFilter","target","value","className","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","CharactersCard","to","src","alt","CharactersList","characters","sort","a","b","CharacterDetail","children","CharacterNotFound","App","useState","setCharacters","setName","setSpecies","useEffect","filterCharacters","filter","toLowerCase","includes","logo","exact","path","inputKey","inputValue","length","optionalMessage","render","routerProps","routerCharacterId","parseInt","match","params","characterFound","find","alien","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5a38e102.chunk.js","sourcesContent":["const dataApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          foto: character.image,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episode: character.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\nexport default dataApi;\r\n","const Filter = (props) => {\r\n  const handleCharacter = (event) => {\r\n    props.handleFilter(event.target.name, event.target.value);\r\n  };\r\n\r\n  /* preventDefault for form */\r\n\r\n  const handleForm = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleForm}>\r\n      <label htmlFor=\"name\" className=\"form__label\">\r\n        Search by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"write a name here...\"\r\n          value={props.name}\r\n          onChange={handleCharacter}\r\n          className=\"form__input\"\r\n        />\r\n      </label>\r\n      <label htmlFor=\"species\" className=\"form__label\">\r\n        Search by species\r\n        <input\r\n          type=\"text\"\r\n          name=\"species\"\r\n          id=\"species\"\r\n          placeholder=\"write the species here...\"\r\n          value={props.species}\r\n          onChange={handleCharacter}\r\n          className=\"form__input\"\r\n        />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharactersCard = (props) => {\r\n  return (\r\n    /* link to character detail page */\r\n\r\n    <Link to={`/character/${props.character.id}`}>\r\n      {/* paint list with all characters */}\r\n\r\n      <div className=\"list__item--container\">\r\n        <img\r\n          src={props.character.foto}\r\n          alt={`Foto of ${props.character.name}`}\r\n          className=\"list__item--image\"\r\n        />\r\n\r\n        <h2 className=\"list__item--name\">{props.character.name}</h2>\r\n        <h3 className=\"list__item--species\">{props.character.species}</h3>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\n/* propTypes */\r\n\r\nCharactersCard.propTypes = {\r\n  character: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    species: PropTypes.string.isRequired,\r\n    foto: PropTypes.string.isRequired,\r\n    status: PropTypes.string.isRequired,\r\n    origin: PropTypes.string.isRequired,\r\n    episode: PropTypes.array.isRequired,\r\n  }),\r\n};\r\n\r\nexport default CharactersCard;\r\n","import React from 'react';\r\nimport CharactersCard from './CharactersCard';\r\nimport '../stylesheets/App.scss';\r\n\r\nconst CharactersList = (props) => {\r\n  /*  sort alphabetically */\r\n  const characterName = props.characters.sort(function (a, b) {\r\n    if (a.name < b.name) {\r\n      return -1;\r\n    }\r\n    if (a.name > b.name) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const character = characterName.map((character) => {\r\n    return (\r\n      <li key={character.id} className=\"list__item\">\r\n        <CharactersCard character={character} />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list\">{character} </ul>\r\n    </>\r\n  );\r\n};\r\nexport default CharactersList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/App.scss';\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"link\">\r\n        <h4>Return to main site</h4>\r\n      </Link>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/App.scss';\r\n\r\nconst CharacterNotFound = () => {\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2 className=\"optionalMessage\">Character not found, sorry</h2>\r\n      </section>\r\n      <Link to=\"/\" className=\"link\">\r\n        <h4>Return to main site</h4>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo.de13d484.png\";","import { Route, Switch } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport dataApi from '../services/DataApi';\nimport Filter from './Filter';\nimport CharactersList from './CharactersList';\nimport CharacterDetail from './CharacterDetail';\nimport CharacterNotFound from './CharacterNotFound';\nimport logo from '../images/Rick_and_Morty_-_logo.png';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState('');\n  const [species, setSpecies] = useState('');\n\n  /* get data from Api */\n\n  useEffect(() => {\n    dataApi().then((data) => setCharacters(data));\n  }, []);\n\n  /*  filter by name and by species*/\n\n  const handleFilter = (inputKey, inputValue) => {\n    if (inputKey === 'name') {\n      setName(inputValue);\n    } else if (inputKey === 'species') {\n      setSpecies(inputValue);\n    }\n  };\n\n  const filterCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(name.toLowerCase());\n    })\n    .filter((character) => {\n      return character.species.toLowerCase().includes(species.toLowerCase());\n    });\n\n  /* optional message if there is no character with this name or species */\n\n  function optionalMessage() {\n    if (filterCharacters.length === 0) {\n      return (\n        <p>\n          There is no character matching the word {name} {species}.\n        </p>\n      );\n    }\n  }\n\n  /* route */\n\n  const renderDetail = (routerProps) => {\n    const routerCharacterId = parseInt(routerProps.match.params.id);\n\n    /* paint details of character or message if no character is found */\n\n    const characterFound = characters.find(\n      (character) => character.id === routerCharacterId\n    );\n\n    /* add icon if status of character is dead */\n\n    function alien() {\n      if (characterFound.status === 'Dead') {\n        return <i className=\"fab fa-optin-monster characterDetail__alien\"></i>;\n      }\n    }\n    if (characterFound) {\n      return (\n        <div className=\"box\">\n          <CharacterDetail>\n            <div className=\"characterDetail\">\n              <img\n                src={characterFound.foto}\n                alt={`Foto of ${characterFound.name}`}\n                className=\"characterDetail__image\"\n              />\n              <div className=\"characterDetail__container\">\n                <h2 className=\"characterDetail__name\">{characterFound.name}</h2>\n                <h3 className=\"characterDetail__species\">\n                  Status: {characterFound.status} {alien()}\n                </h3>\n                <h3 className=\"characterDetail__species\">\n                  Species: {characterFound.species}\n                </h3>\n                <h3 className=\"characterDetail__species\">\n                  Origin: {characterFound.origin}\n                </h3>\n                <h3 className=\"characterDetail__species\">\n                  Episodes: {characterFound.episode.length}\n                </h3>\n              </div>\n            </div>\n          </CharacterDetail>\n        </div>\n      );\n    } else {\n      return <CharacterNotFound />;\n    }\n  };\n  return (\n    <>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo Rick and Morty\" className=\"header__image\" />\n      </header>\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            {/* filter, optional message and characterlist within this route */}\n            <Filter handleFilter={handleFilter} name={name} species={species} />\n            <div className=\"optionalMessage\">{optionalMessage()}</div>\n            <CharactersList characters={filterCharacters} />\n          </Route>\n          <Route path=\"/character/:id\" render={renderDetail}></Route>\n        </Switch>\n      </main>\n      <footer className=\"footer\">\n        <small className=\"footer__text\">Rick and Morty</small>\n      </footer>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}